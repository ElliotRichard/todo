{"version":3,"sources":["logo.svg","components/todoList.js","components/todoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","ListGroup","Item","variant","onClick","deleteTodo","todo","TodoList","todos","map","TodoForm","handleChange","event","target","value","setState","todoInput","handleSubmit","preventDefault","addTodo","state","onSubmit","type","placeholder","this","onChange","React","Component","App","prevState","selectedTodo","filter","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,oBCGTA,EAAO,SAAAC,GAAK,OAClB,cAACC,EAAA,EAAUC,KAAX,CAAgBC,QAAQ,UAAUC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,OAAxE,SAAgFN,EAAMM,QAgBvEC,EAdE,SAAAP,GACb,OACI,cAACC,EAAA,EAAD,UACKD,EAAMQ,MAAMC,KAAI,SAAAH,GAAI,OACjB,cAAC,EAAD,CACIA,KAAMA,EAEND,WAAYL,EAAMK,YADbC,SCeVI,E,kDAvBX,WAAaV,GAAQ,IAAD,8BAChB,cAAMA,IAFVM,KAAO,GACa,EAIpBK,aAAe,SAAAC,GACX,EAAKN,KAAOM,EAAMC,OAAOC,MACzB,EAAKC,SAAS,CAACC,UAAW,EAAKV,QANf,EAQpBW,aAAe,SAAAL,GACXA,EAAMM,iBACN,EAAKlB,MAAMmB,QAAQ,EAAKC,MAAMJ,WAC9B,EAAKV,KAAO,IATZ,EAAKc,MAAQ,CAAEJ,UAAW,IAFV,E,0CAapB,WAAU,IAAD,OACL,OACI,uBAAMK,SAAU,SAAAT,GAAK,OAAI,EAAKK,aAAaL,IAA3C,UACI,uBAAOU,KAAK,OAAOC,YAAY,WAAWT,MAAOU,KAAKlB,KAAMmB,SAAU,SAAAb,GAAK,OAAI,EAAKD,aAAaC,MACjG,uBAAOU,KAAK,SAASR,MAAM,kB,GAnBpBY,IAAMC,WCgCdC,E,kDA3Bb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAKRmB,QAAU,SAAAb,GACR,EAAKS,UAAS,SAAAc,GAAS,MAAK,CAC1BrB,MAAM,GAAD,mBAAMqB,EAAUrB,OAAhB,CAAuBF,SARb,EAWnBD,WAAa,SAAAyB,GACX,EAAKf,UAAS,SAAAc,GAAS,MAAK,CAC1BrB,MAAOqB,EAAUrB,MAAMuB,QAAO,SAAAzB,GAAI,OAAIA,IAASwB,UAXjD,EAAKV,MAAQ,CACXZ,MAAO,IAHQ,E,0CAgBnB,WACE,OACE,sBAAKwB,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,CAAUxB,MAAOgB,KAAKJ,MAAMZ,MAAOH,WAAYmB,KAAKnB,aACpD,cAAC,EAAD,CAAUc,QAASK,KAAKL,iB,GAtBdO,IAAMC,WCMTM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8296de0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import ListGroup from 'react-bootstrap/ListGroup';\nimport React from \"react\";\n\nconst Todo = props => (\n<ListGroup.Item variant=\"primary\" onClick={() => props.deleteTodo(props.todo)}>{props.todo}</ListGroup.Item>\n);\nconst TodoList = props => {\n    return (\n        <ListGroup>\n            {props.todos.map(todo => (\n                <Todo \n                    todo={todo} \n                    key={todo} \n                    deleteTodo={props.deleteTodo}\n                />\n            ))}\n        </ListGroup>\n    );\n};\n\nexport default TodoList;","import React from 'react';\n\nclass TodoForm extends React.Component {\n    todo = '';\n    constructor (props) {\n        super(props);\n        this.state = { todoInput: \"\"};\n    }\n    handleChange = event => {\n        this.todo = event.target.value;\n        this.setState({todoInput: this.todo});\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.addTodo(this.state.todoInput);\n        this.todo = '';\n    }\n    render() {\n        return (\n            <form onSubmit={event => this.handleSubmit(event)}>\n                <input type=\"text\" placeholder=\"Add goal\" value={this.todo} onChange={event => this.handleChange(event)}/>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nexport default TodoForm;","import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './components/todoList';\nimport TodoForm from './components/todoForm';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n    };\n  }\n  addTodo = todo => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  };\n  deleteTodo = selectedTodo => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo !== selectedTodo),\n    }))\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>To-Do</h1>\n        <TodoList todos={this.state.todos} deleteTodo={this.deleteTodo} />\n        <TodoForm addTodo={this.addTodo} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}